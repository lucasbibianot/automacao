version: "3.3"

services:
  traefik:
    image: traefik:v2.9
    restart: always
    ports:
      - 80:80
      - 443:443
    networks:
      - web
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./letsencrypt:/letsencrypt
    container_name: traefik
    command:
      - "--log.level=DEBUG"
        #- "--api.insecure=true"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls=true"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt.acme.caserver=https://acme-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.letsencrypt.acme.email=lucas.bibianot@gmai.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    labels:
      - "traefik.enable=true"
        #- "traefik.http.routers.api.rule=Host(`traefik.lets-iot.online`) && PathPrefix(`/api`, `/dashboard`)"
        #- "traefik.http.routers.api.service=api@internal"
        #- "traefik.http.routers.api.middlewares=auth"
        #- "traefik.http.routers.api.tls.certresolvers=letsencrypt"
        #- "traefik.http.routers.api.entrypoints=websecure"
        #- "traefik.http.middlewares.auth.basicauth.users=test:$$apr1$$H6uskkkW$$IgXLP6ewTrSuBkTrqE8wj/,test2:$$apr1$$d9hr9HBB$$4HxwgUir3HP4EsggP/QNo0"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.lets-iot.online`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=auth"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.middlewares.auth.basicauth.users=root:$$apr1$$3ks58ahx$$7m4P8HT/OZBB/tbJh3moy."
  whoami:
    image: "traefik/whoami"
    container_name: "simple-service"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.lets-iot.online`)"
      - "traefik.http.routers.whoami.entrypoints=websecure"
      - "traefik.http.routers.whoami.tls.certresolver=letsencrypt"
    networks:
      - web

  nodered:
    image: nodered/node-red:latest
    environment:
      - TZ=America/Sao_Paulo
    networks:
      - web
    volumes:
      - nodered-data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nodered.rule=Host(`nodered.lets-iot.online`)"
      - "traefik.http.routers.nodered.entrypoints=websecure"
      - "traefik.http.routers.nodered.tls.certresolver=letsencrypt"
      - "traefik.http.routers.nodered.middlewares=auth"

  mosquitto:
    image: eclipse-mosquitto
    volumes:
      - mosquitto-data:/mosquitto/:rw
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=mqtt"
      - "traefik.tcp.services.mqtt.loadbalancer.server.port=1883"
      - "traefik.tcp.services.mqtt_websocket.loadbalancer.server.port=9001"
      - "traefik.tcp.routers.tcpr_mqtt.entrypoints=mqtt"
      - "traefik.tcp.routers.tcpr_mqtt.rule=HostSNI(`broker.lets-iot.online`)"
      - "traefik.tcp.routers.tcpr_mqtt.service=mqtt"
      - "traefik.tcp.routers.tcpr_mqtt_websocket.entrypoints=websocket"
      - "traefik.tcp.routers.tcpr_mqtt_websocket.rule=HostSNI(`broker.lets-iot.online`)"
      - "traefik.tcp.routers.tcpr_mqtt_websocket.service=mqtt_websocket"
      - "traefik.tcp.routers.tcpr_mqtt_websocket.tls.certresolver=letsencrypt"
    ports:
      - 1883:1883
      - 9001:9001

networks:
  web:
    external: true
volumes:
  nodered-data:
  mosquitto-data:
