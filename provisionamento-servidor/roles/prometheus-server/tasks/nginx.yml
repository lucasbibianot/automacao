---
- name: "nginx config directory (bind volume)"
  file:
    path: "{{ prometheus_nginx_base_dir }}/config"
    state: directory
    group: nfsnobody
    mode: 0770
  tags:
    - kubetrt3.prometheus-server.nginx.dirs

- name: "nginx config file"
  template:
    src: nginx.conf
    dest: "{{ prometheus_nginx_base_dir }}/config/nginx.conf"
    backup: yes
  notify: "restart nginx topic"
  tags:
    - kubetrt3.prometheus-server.nginx.cfg.copy
    - kubetrt3.prometheus-server.nginx.update

- name: "nginx htpasswd file"
  template:
    src: htpasswd
    dest: "{{ prometheus_nginx_base_dir }}/config/.htpasswd"
    backup: yes
  notify: "restart nginx topic"    
  tags:
    - kubetrt3.prometheus-server.nginx.cfg.copy
    - kubetrt3.prometheus-server.nginx.update

- name: "nginx container (pull image)"
  community.docker.docker_image:
    name: nginx
    tag: "{{ prometheus_nginx_version }}"
    state: present
    source: pull
  tags: 
    - kubetrt3.prometheus-server.nginx.pull.image
    - kubetrt3.prometheus-server.nginx.update

- name: "nginx testar config file"
  command: "docker run --rm -it --add-host {{ prometheus_container_name }}:127.0.0.1  -v {{ prometheus_nginx_base_dir }}/config/nginx.conf:/etc/nginx/nginx.conf:ro nginx:{{ prometheus_nginx_version }} nginx -t"
  register: result
  tags:
    - kubetrt3.prometheus-server.nginx.test.config
    - kubetrt3.prometheus-server.nginx.update
    - never

- name: "nginx start up"
  community.docker.docker_container:
    name: "{{ prometheus_nginx_container_name }}"
    auto_remove: no
    detach: yes
    init: no
    interactive: no
    paused: no
    privileged: no
    read_only: no
    memory: 0
    # afetava: auto_remove, detach, init, interactive, memory, paused, privileged, read_only and tty options.
    container_default_behavior: no_defaults        
    image: "nginx:{{prometheus_nginx_version}}"
    state: started
    recreate: no
    restart: no
    restart_policy: always
    network_mode: "{{ 'bridge' if aux_docker_network_name is not defined else aux_docker_network_name }}"
    networks:
      - name: "{{ 'bridge' if aux_docker_network_name is not defined else aux_docker_network_name }}"
    networks_cli_compatible: yes    
    volumes:
      - "{{ prometheus_nginx_base_dir }}/config/nginx.conf:/etc/nginx/nginx.conf:ro"
      - "{{ prometheus_nginx_base_dir }}/config/.htpasswd:/etc/nginx/.htpasswd:ro"
    exposed_ports: "{{ prometheus_nginx_exposed_ports }}"
    #ports: "{{ prometheus_nginx_container_port_mappings }}" TODO: usar o mesmo padrao em prom-server, grafana-server e aqui
    #TODO paramerizar labels (como na role 'registry')
    labels:
      traefik.http.routers.nginx.rule: "Host(`{{prometheus_hostname}}`)"
      traefik.http.routers.nginx.service: nginx
      traefik.http.middlewares.redirect-prometheus.redirectregex.regex: "^https://{{prometheus_hostname}}/$"
      traefik.http.middlewares.redirect-prometheus.redirectregex.replacement: "https://{{prometheus_hostname}}/{{prometheus_prefix}}/"
      traefik.http.middlewares.redirect-prometheus.redirectregex.permanent: "true"
      traefik.http.routers.nginx.middlewares: "redirect-prometheus@docker"
      traefik.http.routers.nginx.tls: "true"
      traefik.http.services.nginx.loadbalancer.server.port: "9090"
  tags:
    - kubetrt3.prometheus-server.nginx.start_restart
    - kubetrt3.prometheus-server.nginx.update

...
